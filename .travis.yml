# Copyright 2008-present Contributors to the OpenImageIO project.
# SPDX-License-Identifier: BSD-3-Clause
# https://github.com/OpenImageIO/oiio/blob/master/LICENSE.md

# .travis.yml for OIIO

language: cpp
osx_image: xcode10
dist: xenial


# Add-ons: specify apt packages for Linux
# We actaully specify packages per-matrix-entry, so these don't do anything
# except to tag them (&add-sources, &common-packages, &common-boost-packages)
# so they can be referened later ('*') to save repetition.
addons:
  apt:
   sources: &add-sources
      - ubuntu-toolchain-r-test
   packages: &common-packages
      - libgif-dev
      - libopenjpeg-dev
      - libwebp-dev
      - libfreetype6-dev
      - libjpeg-turbo8-dev
      - dcmtk
      - locales
      - python-numpy
      - libraw-dev
      - ninja-build
      # - qtbase5-dev   # FIXME: enable Qt5 on Linux
      # - bzip2
      # - libtinyxml-dev
      # - liblcms2-dev
      # - libyaml-cpp-dev
   packages: &common-boost-packages
      - libboost1.58-dev
      - libboost-filesystem1.58
      - libboost-regex1.58
      - libboost-system1.58
      - libboost-thread1.58
   packages: &old-boost-packages
      - libboost1.55-dev
      - libboost-filesystem1.55
      - libboost-regex1.55
      - libboost-system1.55
      - libboost-thread1.55

cache:
    ccache: true
    apt: true
    directories:
      - $HOME/.ccache
      - $PWD/oiio-images
      - $PWD/libtiffpic

before_install:
    - source src/build-scripts/ci-startup.bash
    - export WHICHGCC=${WHICHGCC:="4.8"}
    - if [ "$CXX" == "g++" ]; then export CXX="g++-${WHICHGCC}" ; fi

install:
    - if [ $TRAVIS_OS_NAME == osx ] ; then source src/build-scripts/install_homebrew_deps.bash ; fi
    - if [ "$BUILD_CMAKE" == "1" ] ; then source src/build-scripts/build_cmake.bash ; fi
    - if [ $TRAVIS_OS_NAME == linux ] ; then CXX="ccache $CXX" source src/build-scripts/build_openexr.bash ; fi
    - if [ $TRAVIS_OS_NAME == linux ] ; then CXX="ccache $CXX" source src/build-scripts/build_ocio.bash ; fi
    - src/build-scripts/install_test_images.bash

# before_script:

script:
    - export LD_LIBRARY_PATH=$OpenImageIO_ROOT/lib:$LD_LIBRARY_PATH
    - export DYLD_LIBRARY_PATH=$OpenImageIO_ROOT/lib:$DYLD_LIBRARY_PATH
    - source src/build-scripts/ci-build-and-test.bash



branches:
  only:
    - master
    - /RB-/
    - /lg-/

matrix:
    fast_finish: true
    include:
    # test default compile: C++11, optimized, default compilers, SSE2
      - name: "VFX Platform 2017 (gcc48, py27, exr2.2)"
        os: linux
        dist: trusty
        compiler: gcc
        env: WHICHGCC=4.8 OPENEXR_BRANCH=v2.2.0 BUILD_CMAKE=1
        addons:
          apt:
            sources: *add-sources
            packages:
              - *common-packages
              - *old-boost-packages
              - g++-4.8

      - name: "Mac (latest clang, py37)"
        os: osx
        compiler: clang
        env: PYTHON_VERSION=3.7
    # Make sure Python 2.7 still works on OSX, but only for PRs, master/RB
    # pushes, or if the branch name includes "python".
      - name: "Mac py27 (latest clang)"
        os: osx
        compiler: clang
        env: PYTHON_VERSION=2.7
        # if: branch =~ /(master|RB|travis|python)/ OR type = pull_request

    # One more, just for the heck of it, turn all SIMD off, and also make
    # sure we're falling back on libjpeg, not jpeg-turbo, no OCIO support,
    # and don't embed the plugins (to make sure that doesn't rust away).  I
    # guess this should/could be both platforms, but in the interest of
    # making the tests go faster, don't bother doing it on OSX.
    # Only build this case for PRs, direct pushes to master or RB branches,
    # or if the branch name includes "simd". Other ordinary work branch
    # pushes don't need to run this.
      - name: "Oldest everything: gcc4.8, boost 1.55, no simd, no jpegturbo, no OCIO, dso plugins, exr2.2"
        os: linux
        dist: trusty
        compiler: gcc
        env: WHICHGCC=4.8 USE_SIMD=0 USE_JPEGTURBO=0 USE_OPENCOLORIO=0 EMBEDPLUGINS=0 OPENEXR_BRANCH=v2.2.0 BUILD_CMAKE=1
        # if: branch =~ /(master|RB|travis|simd)/ OR type = pull_request
        addons:
          apt:
            sources: *add-sources
            packages:
              - *common-packages
              - *old-boost-packages
              - g++-4.8

    # Static analysis: build with clang-tidy.
    # Disabled -- this takes so long to run, it can't complete in Travis's
    # 50 minute time limit. Left here just to show how it should work.
      #  - name: "Static analysis / clang-tidy"
      #    os: linux
      #    compiler: gcc
      #    env: CLANG_TIDY=1 CLANG_TIDY_FIX=1 SKIP_TESTS=1
      #    if: branch =~ /(master|RB|travis|tidy)/ OR type = pull_request
    # Build with EMBEDPLUGINS=0, both platforms.
      # FIXME: doesn't work yet on Travis
      # - os: linux
      #   compiler: gcc
      #   env: EMBEDPLUGINS=0
      # FIXME: don't have OSX EMBEDPLUGINS=0 working yet on Travis (though
      # it works fine on my laptop).
      # - os: osx
      #   compiler: clang
      #   env: EMBEDPLUGINS=0

notifications:
    email:
        recipients:
            - lg@openimageio.org
        on_success: change
        on_failure: always
