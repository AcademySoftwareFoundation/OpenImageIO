[project]
name = "OpenImageIO"
dynamic = ["version"]
description = "Reading, writing, and processing images in a wide variety of file formats, using a format-agnostic API, aimed at VFX applications."
authors = [
    {name = "Larry Gritz", email = "lg@larrygritz.com"},
    {name = "OpenImageIO Contributors", email = "oiio-dev@lists.aswf.io"}
]
maintainers = [
    {name = "Larry Gritz", email = "lg@larrygritz.com"},
    {name = "OpenImageIO Contributors", email="oiio-dev@lists.aswf.io"},
]
readme = "README.md"
license = {text = "Apache-2.0, BSD-3-Clause"}
keywords = [""]
classifiers = [
    "Development Status :: 4 - Beta",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Multimedia :: Graphics",
    "Topic :: Multimedia :: Video",
    "Topic :: Multimedia :: Video :: Display",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = []
requires-python = ">= 3.9"

[project.urls]
Homepage = "https://openimageio.org/"
Source = "https://github.com/AcademySoftwareFoundation/OpenImageIO"
Documentation = "https://openimageio.readthedocs.io"
Issues = "https://github.com/AcademySoftwareFoundation/OpenImageIO/issues"


[project.scripts]
iconvert = "OpenImageIO:_command_line"
idiff = "OpenImageIO:_command_line"
igrep = "OpenImageIO:_command_line"
iinfo = "OpenImageIO:_command_line"
maketx = "OpenImageIO:_command_line"
oiiotool = "OpenImageIO:_command_line"
testtex = "OpenImageIO:_command_line"

[build-system]
build-backend = "scikit_build_core.build"
requires = [
    "scikit-build-core>=0.9.8,<1",
    "pybind11",
    "oldest-supported-numpy",
]

[tool.scikit-build.metadata.version]
# Dynamically parse the version from the CMakeLists.txt file.
provider = "scikit_build_core.metadata.regex"
input = "CMakeLists.txt" 
regex = 'set \(OpenImageIO_VERSION "(?P<value>[0-9a-z.]+)"\)'

[tool.scikit-build]
cmake.verbose = false
cmake.version = ">=3.29.1"
wheel.install-dir = "OpenImageIO"
cmake.args = [
    # OpenImageIO-2.6+ has a mechanism for building, linking, and 
    # distributing missing dependencies. See src/cmake for details.
    "-DOpenImageIO_BUILD_MISSING_DEPS=all",
]

[tool.cibuildwheel]
build-verbosity = 1
build = "cp39-* cp310-* cp311-* cp312-* cp313-* pp*"
skip = [
    "pp*",
    "cp39-*",
    #"cp310-*",
    #"cp311-*",
    "cp312-*",
    "cp313-*",
    "*musllinux*",
]
# Repairwheel is a tool that gathers shared libraries and 
# adjusts the rpath of the compiled wheels. The OIIO build
# process places any missing dependencies it compiles in
# the build_wheels/deps/dist/{lib,lib64} directories.
before-build = "pipx install repairwheel"
repair-wheel-command = """\
repairwheel \
    -l ${SKBUILD_BUILD_DIR}/deps/dist/lib \
    -l ${SKBUILD_BUILD_DIR}/lib \
    -o {dest_dir} \
    {wheel}
"""


[tool.cibuildwheel.macos.environment]
SKBUILD_BUILD_DIR = "/tmp/build_wheels"
SKBUILD_CMAKE_ARGS = "-DOpenImageIO_BUILD_LOCAL_DEPS=TIFF; -DOpenImageIO_BUILD_MISSING_DEPS=all"


[tool.cibuildwheel.linux.environment]
# Suppress warnings that cause linux cibuildwheel build to fail
CXXFLAGS = "-Wno-error=stringop-overflow= -Wno-pragmas"
SKBUILD_BUILD_DIR = "/tmp/build_wheels"
SKBUILD_CMAKE_ARGS = "-DOpenImageIO_BUILD_LOCAL_DEPS=TIFF; -DOpenImageIO_BUILD_MISSING_DEPS=all"